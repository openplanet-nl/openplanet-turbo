////////////////////////////////////
// ATTENTION
// Informer live de toute modification dans les enums
#Include "Libs/Nadeo/UIPadButtons.Script.txt" as LibUIButtons

#Const C_TRACKLENGTH_MINI	10000
#Const C_TRACKLENGTH_SHORT	20000
#Const C_TRACKLENGTH_NORMAL	60000
//Unused, infinite length
#Const C_TRACKLENGTH_LONG	10000

declare Text G_APIURL;

Integer GetTrackDurationIndex(Integer _TrackGoldTime, Boolean _IsMultilap)
{
	if (_IsMultilap)
		return 5;
	else if (_TrackGoldTime < C_TRACKLENGTH_MINI)
		return 1;
	else if (_TrackGoldTime < C_TRACKLENGTH_SHORT)
		return 2;
	else if (_TrackGoldTime < C_TRACKLENGTH_NORMAL)
		return 3;
	else
		return 4;
	return -1;
}

Text InjectCountryToCodeConverter() {
	
	
	declare Text Converter = """
	
		Text GetCountryCodeFromName(Text _CountryName)
		{
			switch (_CountryName)
			{	
				case "Afghanistan"							:	return "AFG";
			    case "Albania"								:	return "ALB";
			    case "Algeria"								:	return "ALG";
			    case "Andorra"								:	return "AND";
			    case "Angola"								:	return "ANG";
			 	case "Antigua and Barbuda"					:	return "ANT";
			    case "Argentina"							:	return "ARG";
			    case "Armenia"								:	return "ARM";
			    case "Australia"							:	return "AUS";
			    case "Austria"								:	return "AUT";
			    case "Azerbaijan"							:	return "AZE";
			 	case "Bahamas"								:	return "BAH";
			    case "Bangladesh"							:	return "BAN";
			 	case "Barbados"								:	return "BAR";
			    case "Burundi"								:	return "BDI";
			    case "Belgium"								:	return "BEL";
			    case "Benin"								:	return "BEN";
			 	case "Bhutan"								:	return "BHU";
			   	case "Bosnia and Herzegovina"				:	return "BIH";
			 	case "Belize"								:	return "BIZ";
			    case "Belarus"								:	return "BLR";
			    case "Bolivia"								:	return "BOL";
			 	case "Botswana"								:	return "BOT";
			    case "Brazil"								:	return "BRA";
			    case "Bahrain"								:	return "BRN";
			    case "Brunei"								:	return "BRU";
			    case "Bulgaria"								:	return "BUL";
			    case "Burkina Faso"							:	return "BUR";
			    case "Central African Republic"				:	return "CAF";
			    case "Cambodia"								:	return "CAM";
			    case "Canada"								:	return "CAN";
			 	case "Congo"								:	return "COG";
			 	case "Chad"									:	return "CHA";
			    case "Chile"								:	return "CHI";
			    case "China"								:	return "CHN";
			    case "Ivory Coast"							:	return "CIV";
			    case "Cameroon"								:	return "CMR";
			    case "DR Congo"								:	return "COD";
			    case "Cook Islands"							:	return "COK";
			    case "Colombia"								:	return "COL";
			    case "Comoros"								:	return "COM";
			    case "Cape Verde"							:	return "CPV";	
			 	case "Costa Rica"							:	return "CRC";
			    case "Croatia"								:	return "CRO";
			    case "Cuba"									:	return "CUB";
			    case "Cyprus"								:	return "CYP";
			    case "Czech Republic"						:	return "CZE";
			    case "Denmark"								:	return "DEN";
			    case "Djibouti"								:	return "DJI";
			    case "Dominica"								:	return "DMA";
			    case "Dominican Republic"					:	return "DOM";
			    case "Ecuador"								:	return "ECU";
			    case "World"								:	return "WOR";
				case "United Nations"						:	return "WOR";
			    case "Egypt"								:	return "EGY";
			    case "England"								:	return "ENG";
				case "United Kingdom"						: 	return "GBR";
			    case "Eritrea"								:	return "ERI";
			 	case "El Salvador"							:	return "ESA";
			    case "Spain"								:	return "ESP";
			    case "Estonia"								:	return "EST";
			    case "Ethiopia"								:	return "ETH";
			 	case "Fiji"									:	return "FIJ";
			    case "Finland"								:	return "FIN";
			    case "France"								:	return "FRA";
			    case "Micronesia"							:	return "FSM";
			    case "Gabon"								:	return "GAB";
			 	case "The Gambia"							:	return "GAM";
			    case "Great Britain"						:	return "GBR";
			 	case "Guinea-Bissau"						:	return "GBS";
			    case "Georgia"								:	return "GEO";
			 	case "Equatorial Guinea"					:	return "GEQ";
			    case "Germany"								:	return "GER";
			    case "Ghana"								:	return "GHA";
			    case "Greece"								:	return "GRE";
			 	case "Grenada"								:	return "GRN";
			    case "Guatemala"							:	return "GUA";
			 	case "Guinea"								:	return "GUI";
			    case "Guyana"								:	return "GUY";
			 	case "Haiti"								:	return "HAI";
			    case "Hong Kong"							:   return "HKG";
			 	case "Honduras"								:   return "HON";
			    case "Hungary"								:	return "HUN";
			    case "Indonesia"							:	return "INA";
			    case "India"								:	return "IND";
			    case "Iran"									:	return "IRI";
			    case "Ireland"								:	return "IRL";
			    case "Iraq"									:	return "IRQ";
			    case "Iceland"								:	return "ISL";
			    case "Italy"								:	return "ITA";
			    case "Jamaica"								:	return "JAM";
			    case "Jordan"								:	return "JOR";
			    case "Japan"								:	return "JPN";
			    case "Kazakhstan"							:	return "KAZ";
			    case "Kenya"								:	return "KEN";
			    case "Kyrgyzstan"							:	return "KGZ";
			    case "Kiribati"								:	return "KIR";
			    case "South Korea"							:	return "KOR";
			    case "Saudi Arabia"							:	return "KSA";
			    case "Kuwait"								:	return "KUW";
			    case "Laos"									:	return "LAO";
			    case "Latvia"								:	return "LAT";
			    case "Libya"								:	return "LBA";
			    case "Liberia"								:	return "LBR";
			    case "Saint Lucia"							:	return "LCA";
			 	case "Lesotho"								:	return "LES";
			    case "Israel"								:	return "ISR";
			    case "Lebanon"								:	return "LIB";
			    case "Liechtenstein"						:	return "LIE";
			    case "Lithuania"							:	return "LTU";
			    case "Luxembourg"							:	return "LUX";
			 	case "Madagascar"							:	return "MAD";
			    case "Morocco"								:	return "MAR";
			    case "Malaysia"								:	return "MAS";
			 	case "Malawi"								:	return "MAW";
			    case "Moldova"								:	return "MDA";
			    case "Maldives"								:	return "MDV";
			    case "Mexico"								:	return "MEX";
			    case "Mongolia"								:	return "MGL";
			    case "Marshall Islands"						:	return "MHL";
			    case "Macedonia"							:	return "MKD";
			    case "Mali"									:	return "MLI";
			    case "Malta"								:	return "MLT";
			    case "Montenegro"							:	return "MNE";
			 	case "Monaco"								:	return "MON";
			    case "Mozambique"							:	return "MOZ";
			 	case "Mauritius"							:	return "MRI";
			 	case "Mauritania"							:	return "MTN";
			 	case "Myanmar"								:	return "MYA";
			    case "Namibia"								:	return "NAM";
			 	case "Nicaragua"							:	return "NCA";
			    case "Netherlands"							:	return "NED";
			 	case "Nepal"								:	return "NEP";
			    case "Nigeria"								:   return "NGR";
			 	case "Niger"								:	return "NER";
				case "Niue"									:	return "NIU";
			 	case "Norway"								:	return "NOR";
			    case "Nauru"								:	return "NRU";
			    case "New Zealand"							:	return "NZL";
			    case "Oman"									:	return "OMA";
			    case "Pakistan"								:	return "PAK";
			    case "Panama"								:	return "PAN";
			 	case "Paraguay"								:	return "PAR";
			    case "Peru"									:	return "PER";
			    case "Philippines"							:	return "PHI";
			    case "Palestine"							:	return "PLE";
			    case "Palau"								:	return "PLW";
			    case "Papua New Guinea"						:	return "PNG";
			    case "Poland"								:	return "POL";
			    case "Portugal"								:	return "POR";
			    case "North Korea"							:	return "PRK";
			    case "Qatar"								:	return "QAT";
			    case "Taiwan"								:	return "ROC";
			    case "Romania"								:	return "ROU";
			    case "South Africa"							:	return "RSA";
			    case "Russia"								:	return "RUS";
			    case "Rwanda"								:	return "RWA";
			 	case "Samoa"								:	return "SAM";
			    case "Scotland"								:	return "SCO";
			    case "Senegal"								:	return "SEN";
			 	case "Seychelles"							:	return "SYC";
			    case "Singapore"							:	return "SIN";
			 	case "Saint Kitts and Nevis"				:	return "SKN";
			    case "Sierra Leone"							:	return "SLE";
			    case "Slovenia"								:	return "SLO";
			    case "San Marino"							:	return "SMR";
			 	case "Solomon Islands"						:	return "SOL";
			    case "Somalia"								:	return "SOM";
			    case "Serbia"								:	return "SRB";
			 	case "Sri Lanka"							:	return "SRI";
			    case "South Sudan"							:	return "SSD";
			    case "São Tomé and Príncipe"				:	return "STP";
			 	case "Sudan"								:	return "SUD";
			    case "Switzerland"							:	return "SUI";
			    case "Suriname"								:	return "SUR";
			    case "Slovakia"								:	return "SVK";
			    case "Sweden"								:   return "SWE";
			    case "Swaziland"							:   return "SWZ";
			    case "Syria"								:   return "SYR";
			 	case "Tanzania"								:   return "TAN";
			 	case "Tonga"								:   return "TGA";
			    case "Thailand"								:   return "THA";
			    case "Tajikistan"							:   return "TJK";
			    case "Turkmenistan"							:   return "TKM";
			    case "Timor-Leste"							:   return "TLS";
			 	case "Togo"									:   return "TOG";
			    case "Trinidad and Tobago"					:   return "TTO";
			    case "Tunisia"								:   return "TUN";
			    case "Turkey"								:   return "TUR";
			    case "Tuvalu"								:   return "TUV";
			 	case "United Arab Emirates"					:   return "UAE";
			    case "Uganda"								:   return "UGA";
			    case "Ukraine"								:   return "UKR";
			    case "Uruguay"								:   return "URU";
				case "United States"						:   return "USA";
			    case "Uzbekistan"							:   return "UZB";
			 	case "Vanuatu"								:   return "VAN";
				case "Vatican City"							:   return "VAT";
			    case "Venezuela"							:   return "VEN";
			    case "Vietnam"								:   return "VIE";
			 	case "Saint Vincent and the Grenadines"		:   return "VIN";
			    case "Wales"								:   return "WAL";
				case "Yemen"								:   return "YEM";
				case "Zambia"								:   return "ZAM";
				case "Zimbabwe"								:   return "ZIM";
			}
			return "";
		}
	""";
	return Converter;
}

Text InjectConverters() {
	declare Text Converters = """
		{{{LibUIButtons::InjectCountryCodeToFlagConverter()}}}
		
		//Soon : GetStyles
		Integer GetPlayerLevelClass(Integer _LadderPoints, Integer  _MaxLadderPoints)
		{
			if (_LadderPoints >= _MaxLadderPoints * 0.8)
				return 5;
			else if (_LadderPoints >= _MaxLadderPoints * 0.6)
				return 4;
			else if (_LadderPoints >= _MaxLadderPoints * 0.4)
				return 3;
			else if (_LadderPoints >= _MaxLadderPoints * 0.2)
				return 2;
			else
				return 1;
			return 1;
		}
	
		Text GetAdequacy(Integer _LadderPoints, Integer[] _Classes, Integer _MaxLadderPoints)
		{
			if (_Classes.count != 5)
				return "";
				
			switch(_Classes[GetPlayerLevelClass(_LadderPoints, _MaxLadderPoints) - 1])
			{
				case 1:
					return "Green";
				case 2:
					return "YellowHigh";
				case 3:
					return "YellowLow";
				case 4:
					return "RedHigh";
				case 5:
					return "RedLow";  
				default :
					return "RedLow";
			}
			return "";
		}
		
		Text GetAdequacyComment(Text _Adequacy)
		{
			switch(_Adequacy)
			{
			case "Green":
				return _("At your level");
			case "YellowHigh":
				return _("Difficult");
			case "YellowLow":
				return _("Easy");
			case "RedHigh":
				return _("Very difficult");
			case "RedLow":
				return _("Way too easy");
			}
			return "";
		}
		
		Text GetRequiredState(Boolean _IsOnline)
		{
			if (_IsOnline)
				return "2";
			return "1";
		}
		
		Text GetStatus(Text _Status)
		{
			if (_Status == "Running")
				return "2";
			else if (_Status == "Stop")
				return "5";
			else if (_Status == "Error")
				return "4";
			
			else if (_Status == "2")
				return "Running";
			else if (_Status == "4")
				return "Error";
			else if (_Status == "5")
				return "Stop";
			return "";
		}
		
		Integer GetTrackDurationIndex(Integer _TrackGoldTime, Boolean _IsMultilap)
		{
			if (_IsMultilap)
				return 5;
			else if (_TrackGoldTime < {{{C_TRACKLENGTH_MINI}}})
				return 1;
			else if (_TrackGoldTime < {{{C_TRACKLENGTH_SHORT}}})
				return 2;
			else if (_TrackGoldTime < {{{C_TRACKLENGTH_NORMAL}}})
				return 3;
			else
				return 4;
			return -1;
		}
		
	""";
	return Converters;
}



Text InjectJson() {
	declare Text Functions = """
		Text Json_DoElem(Text _Name, Text _Value)
		{
			declare Text Elem = "\"";
			Elem ^= _Name;
			Elem ^= "\":";
			Elem ^= _Value;
			log("Elem : "^Elem);
			return Elem;
		}
		
		Text Json_DoElemText(Text _Name, Text _Value)
		{
			declare Text Elem = "\"";
			Elem ^= _Name;
			Elem ^= "\":\"";
			Elem ^= _Value;
			Elem ^= "\"";
			//Elem ^= "\n";
			log("Elem : "^Elem);
			return Elem;
		}
		""";
	return Functions;
}

Text InjectFilters() {
	declare Text Functions = """
		Text GetFiltersText(Text[] _Scripts, Text[] _Environments, Text[] _Durations, Text[] _Styles) {
			declare Text FiltersText;
			for (I, 0, _Scripts.count - 1)
				FiltersText ^= "&modes[]="^_Scripts[I];
			for (I, 0, _Environments.count - 1)
				FiltersText ^= "&environments[]="^_Environments[I];
			for (I, 0, _Styles.count - 1)
				FiltersText ^= "&styles[]="^_Styles[I];
			for (I, 0, _Durations.count - 1)
				FiltersText ^= "&durations[]="^_Durations[I];
			return FiltersText;
		}
	""";
	return Functions;
}

Void LiveLoop()
{
	if (G_APIURL == "")
	{
		G_APIURL = ManiaPlanet.MasterServer_GetURL("live_api_url");
		// log("MASTER SERVER URL: "^G_APIURL);
	}
}

Text GetAPIUrl() {
	if (G_APIURL == "")
		G_APIURL = ManiaPlanet.MasterServer_GetURL("live_api_url");
	return G_APIURL;
}

Void SetAPIUrl(Text _Url) {
	G_APIURL = _Url;
}
