#Include "Libs/Nadeo/TMConsole/Menu/MenuLayers.Script.txt"		as Layers
#Include "TextLib" as TL

#Const C_MAXCAPACITY 15		// pas la peine de mettre plus, on peut pas scroller.

declare Text[Text][] G_Requests;

Void AddGetRequest(Text _Id, Text _HostUrl, Text _Route, Text _AuthHeader)
{
	while (G_Requests.count >= C_MAXCAPACITY)
		G_Requests.removekey(0);
	
	G_Requests.add(Text[Text]);
	declare RequestIndex = G_Requests.count - 1;

	G_Requests[RequestIndex]["mode"] 		= "GET";
	G_Requests[RequestIndex]["id"] 			= _Id;
	G_Requests[RequestIndex]["host"] 		= _HostUrl;
	G_Requests[RequestIndex]["url"] 		= _Route;
	G_Requests[RequestIndex]["auth"] 		= _AuthHeader;
	G_Requests[RequestIndex]["sendtime"] 	= ManiaPlanet.CurrentLocalDateText;
	G_Requests[RequestIndex]["sendtimems"]	= TL::ToText(Now);
	
}

Void AddPostRequest(Text _Id, Text _HostUrl, Text _Route, Text _AuthHeader, Text _Body)
{
	while (G_Requests.count >= C_MAXCAPACITY)
		G_Requests.removekey(0);

	G_Requests.add(Text[Text]);
	declare RequestIndex = G_Requests.count - 1;

	G_Requests[RequestIndex]["mode"] 		= "POST";
	G_Requests[RequestIndex]["id"] 			= _Id;
	G_Requests[RequestIndex]["host"] 		= _HostUrl;
	G_Requests[RequestIndex]["url"] 		= _Route;
	G_Requests[RequestIndex]["auth"] 		= _AuthHeader;
	G_Requests[RequestIndex]["requestbody"]	= _Body;
	G_Requests[RequestIndex]["sendtime"] 	= ManiaPlanet.CurrentLocalDateText;
	G_Requests[RequestIndex]["sendtimems"]	= TL::ToText(Now);
}

Void AnswerRequest(Text _Id, Integer _Code, Text _Body)
{
	for (I, 0, G_Requests.count - 1)
	{
		if (G_Requests[I]["id"] == _Id)
		{
			G_Requests[I]["httpcode"] 		= TL::ToText(_Code);
			G_Requests[I]["answerbody"] 	= _Body;
			declare Integer SendTimeMs 		= TL::ToInteger(G_Requests[I]["sendtimems"]);
			G_Requests[I]["requesttime"]	= TL::ToText(Now - SendTimeMs)^" ms";
			return;
		}
	}
}

Void LiveLoop() {
	foreach(Event in PendingEvents)
	{
		if (Event.Type != CManiaAppEvent::EType::LayerCustomEvent)
			continue;
		switch (Event.CustomEventType)
		{
			case "RequestLogger_Refresh" :
			{
				declare CUILayer RequestLoggerLayer = Layers::Get("Dbg_RequestLogger");
				declare Text[Text][] Requests for RequestLoggerLayer.LocalPage;
				Requests = G_Requests;
				LayerCustomEvent(RequestLoggerLayer, "RequestsReceived", Text[]);
			}
			case "RequestLogger_FlushRequests" :
			{
				G_Requests.clear();
				declare CUILayer RequestLoggerLayer = Layers::Get("Dbg_RequestLogger");
				declare Text[Text][] Requests for RequestLoggerLayer.LocalPage;
				Requests = G_Requests;
				LayerCustomEvent(RequestLoggerLayer, "RequestsReceived", Text[]);
				dump(Null); // HACK flush mem pool
			}
		}
	}
}