#Include "TextLib"																	as TextLib
#Include "Libs/Nadeo/TMConsole/Logger.Script.txt"									as Logger
#Include "Libs/Nadeo/TMConsole/Menu/MenuLayers.Script.txt"							as Layers


Void WarnNotEnoughParams(CMlAppEvent _Event) {
	Logger::Warn("[Menucontroller] event "^_Event.CustomEventType^": not enough params ["^_Event.CustomEventData^"]");
}


// n'est appel√© que si (UserMgr.MainUser != Null)
Void Load() {
	declare persistent Integer[Integer]	Pers_SettingsSliders for UserMgr.MainUser;
	declare persistent Integer Pers_SettingVoiceState for UserMgr.MainUser;
	if(! Pers_SettingsSliders.existskey(1)) {
		Pers_SettingsSliders[1] = 100;
	}
	
	// hop, le passe-plat
	declare Real VolumeVoices for LocalUser;
	VolumeVoices = 1.0;
	if(Pers_SettingVoiceState == 1) {
		VolumeVoices = 0.;
	}
}


Void Loop() {
	if(UserMgr.MainUser == Null) return;
	
	foreach(Event in PendingEvents) {
		if(Event.Type != CMlAppEvent::EType::LayerCustomEvent) continue;
		switch(Event.CustomEventType) {
			
			case "SliderSettings" :
			{
				declare Text Name  = Event.CustomEventData[0];
				declare Text Index = Event.CustomEventData[1];
				switch(Name)
				{
					case "Musics" :{

						declare persistent Integer[Integer]	Pers_SettingsSliders for UserMgr.MainUser;
						Pers_SettingsSliders[0]  = TextLib::ToInteger(Index);
						UserMgr.MainUser.PersistentSave();
					}
					case "Voices" :{
						
						declare persistent Integer[Integer]	Pers_SettingsSliders for UserMgr.MainUser;
						Pers_SettingsSliders[1]  = TextLib::ToInteger(Index);
						UserMgr.MainUser.PersistentSave();
						
						// hop, le passe-plat
						declare Real VolumeVoices for LocalUser;
						VolumeVoices = 0.01 * Pers_SettingsSliders[1];
					}
				}
			}
			case "SwitchSettings" :
			{
				declare Text Name  = Event.CustomEventData[0];
				declare Text Param2 = Event.CustomEventData[1];
				switch(Name)
				{
					case "Musics" :{
						declare persistent Integer Pers_SettingMusicState for UserMgr.MainUser;

						Pers_SettingMusicState =  TextLib::ToInteger(Param2);
						if(UserMgr.MainUser.PersistentIsReady) {
							UserMgr.MainUser.PersistentSave();
						}
					}
					case "Voices" :{
						declare persistent Integer Pers_SettingVoiceState for UserMgr.MainUser;
						
						Pers_SettingVoiceState = TextLib::ToInteger(Param2);
						if(UserMgr.MainUser.PersistentIsReady) {
							UserMgr.MainUser.PersistentSave();
						}
						
						// hop, le passe-plat
						declare Real VolumeVoices for LocalUser;
						VolumeVoices = 1.0;
						if(Pers_SettingVoiceState == 1) {
							VolumeVoices = 0.;
						}
					}
					case "Lights" :{
						declare persistent Integer Pers_SettingLightsState for UserMgr.MainUser;
						Pers_SettingLightsState = TextLib::ToInteger(Param2);
						if(UserMgr.MainUser.PersistentIsReady) {
							UserMgr.MainUser.PersistentSave();
						}
					}
				}
			}
			case "GetSliderInfos" :
			{
				declare persistent Integer[Integer]	Pers_SettingsSliders for UserMgr.MainUser;
				declare Boolean ShouldSave = False;
				
				if(!Pers_SettingsSliders.existskey(0)) {
					Pers_SettingsSliders[0] = 100;
					ShouldSave = True;
				}
				if(!Pers_SettingsSliders.existskey(1)) {
					Pers_SettingsSliders[1] = 100;
					ShouldSave = True;
				}
				
				if(ShouldSave && UserMgr.MainUser.PersistentIsReady) {
					UserMgr.MainUser.PersistentSave();
				}
				
				//log("Get:" ^Pers_SettingsSliders);
				declare CUILayer NextLayer <=> Layers::Get("Settings");
				LayerCustomEvent(NextLayer, "SendSliderInfos", [Pers_SettingsSliders[0]^"", Pers_SettingsSliders[1]^""]);
			}
			case "GetSwitchInfos" :
			{
				declare persistent Integer Pers_SettingMusicState  for UserMgr.MainUser = 0;
				declare persistent Integer Pers_SettingVoiceState  for UserMgr.MainUser = 0;
				declare persistent Integer Pers_SettingLightsState for UserMgr.MainUser = 0;

				declare CUILayer NextLayer <=> Layers::Get("Settings");
				LayerCustomEvent(NextLayer, "SendSwitchInfos", [Pers_SettingMusicState^"", Pers_SettingVoiceState^"", Pers_SettingLightsState^""]);
			}
			
		}
	}

}