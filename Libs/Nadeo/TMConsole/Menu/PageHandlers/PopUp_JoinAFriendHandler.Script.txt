#Include "TextLib"			as TextLib
#Include "Libs/Nadeo/TMConsole/Logger.Script.txt"											as Logger
#Include "Libs/Nadeo/TMConsole/Menu/MenuLayers.Script.txt"									as Layers
#Include "Libs/Nadeo/TMConsole/PopUpManager.Script.txt"										as PopUpManager
#Include "Libs/Nadeo/TMConsole/Menu/Controller/ServerController.Script.txt" 				as ServerController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/OnlinePrivilegeController.Script.txt" 		as OnlinePrivilegeController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/PrivilegeController.Script.txt" 				as PrivilegeController
#Include "Libs/Nadeo/TMConsole/Menu/LoadingScreen.Script.txt"								as LoadingScreen


Void WarnNotEnoughParams(CMlAppEvent _Event) {
	Logger::Warn("[Menucontroller] event "^_Event.CustomEventType^": not enough params ["^_Event.CustomEventData^"]");
}

Void RequestServerStatus(Integer _ServerId)
{
	ServerController::GetServerOnlineStatus("PopUp_JoinAFriend", _ServerId);
}

Void RequestServerStart(Integer _RoomIndex, Text _Password) {
	ServerController::ServerStart("PopUp_JoinAFriend", _RoomIndex, _Password);
}

Void RequestServerStop(Integer _RoomIndex) {
	ServerController::ServerStop("PopUp_JoinAFriend", _RoomIndex);
}

Void RequestServer(Text _DedicatedLogin)
{
	ServerController::GetRoom("PopUp_JoinAFriend", _DedicatedLogin);
}

Void Loop() {
	foreach(Event in PendingEvents) {
		if(Event.Type != CMlAppEvent::EType::LayerCustomEvent) continue;
		switch(Event.CustomEventType) {
			case "RetrieveServer" : {
				RequestServer(Event.CustomEventData[0]);
			}
			case "RequestServerStatus" : {
				if (Event.CustomEventData.count < 1)
					WarnNotEnoughParams(Event);
				else
					RequestServerStatus(TextLib::ToInteger(Event.CustomEventData[0]));
			}
			case "RequestServerStart" : {
				if (Event.CustomEventData.count < 2)
					WarnNotEnoughParams(Event);
				else
					RequestServerStart(TextLib::ToInteger(Event.CustomEventData[0]), Event.CustomEventData[1]);
			}

			case "RequestServerStop" : {
				if (Event.CustomEventData.count < 1)
					WarnNotEnoughParams(Event);
				else
					RequestServerStop(TextLib::ToInteger(Event.CustomEventData[0]));
			}
			case "PopUpLevelTooLow" : {
				if (Event.CustomEventData.count < 2)
					WarnNotEnoughParams(Event);
				else
					PopUpManager::AddPopUp2(10 , TextLib::Compose(_("You can't join this room. You need at least %1 Ladder Points to enter, but you have only %2 of them."), ""^Event.CustomEventData[1], ""^Event.CustomEventData[0]), "Ok", False);
			}
			case "PopUpLevelTooHigh" : { //oblsolÃ¨te non ?
				if (Event.CustomEventData.count < 2)
					WarnNotEnoughParams(Event);
				else
					PopUpManager::AddPopUp2(10 , TextLib::Compose(_("You can't join this room. The upper limit to enter is %1 Ladder Points, but you already have %2 of them."), ""^Event.CustomEventData[1], ""^Event.CustomEventData[0]), "Ok", False);
			}
			case "JoinServer" : {
				if (Event.CustomEventData.count < 1)
					WarnNotEnoughParams(Event);
				else
					ManiaPlanet.OpenLink(Event.CustomEventData[0], CManiaPlanet::ELinkType::ManialinkBrowser);
			}
			case "RequestServerMaps" : {
				declare CUILayer PopUp_JoinAFriend = Layers::Get("PopUp_JoinAFriend");
				LayerCustomEvent(PopUp_JoinAFriend, "ServerMapsAlreadyReceived", Text[]);
			}
			case "PopUpJoinAFriend_Check_PlayMultiplayerSession" : {
				OnlinePrivilegeController::Check_PlayMultiplayerSession("PopUp_JoinAFriend");
			}
			case "ServerInfo_Check_PlayMultiplayerSession" : {
				declare CUILayer PopUp_JoinAFriend = Layers::Get("PopUp_JoinAFriend");
				LoadingScreen::SetLoadingType(2, 0);
				LayerCustomEvent(PopUp_JoinAFriend, "PlayMultiAlreadyChecked", Text[]);
			}
			case "SetLiveStreamingEnabled" : {
				ManiaPlanet.IsLiveStreamingEnabled = (Event.CustomEventData[0] == "True");
			}
			case "CheckCanyonRestriction" : {
				declare CUILayer PopUp_JoinAFriend = Layers::Get("PopUp_JoinAFriend");
				LayerCustomEvent(PopUp_JoinAFriend, "CanyonRestrictionChecked", [TextLib::ToText(PrivilegeController::IsFullPrivilege())]);
			}
			case "RetrieveAutoJoinInfoFromSessionId" : {
				OnlinePrivilegeController::GetSessionInfo("PopUp_JoinAFriend", Event.CustomEventData[0]);
			}
		}
	}
}
