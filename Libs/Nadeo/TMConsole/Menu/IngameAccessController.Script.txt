#Include "Libs/Nadeo/TMConsole/Menu/Pages.Script.txt"								    as Pages
#Include "Libs/Nadeo/TMConsole/Menu/SceneryManager.Script.txt" 						    as SceneryManager
#Include "Libs/Nadeo/TMConsole/Menu/MenuMusicController.Script.txt" 				    as MenuMusicController
#Include "Libs/Nadeo/TMConsole/Menu/MenuLayers.Script.txt"							    as Layers
#Include "Libs/Nadeo/TMConsole/Menu/LoadingScreen.Script.txt"						    as LoadingScreen
#Include "Libs/Nadeo/TMConsole/Menu/Controller/SuperSolo_CampaignController.Script.txt"	as SuperSolo_CampaignController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/Solo_CampaignController.Script.txt"	    as Solo_CampaignController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/Duo_CampaignController.Script.txt"	    as Duo_CampaignController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/ModeController.Script.txt"			    as ModeController
#Include "Libs/Nadeo/TMConsole/Menu/Controller/PrivilegeController.Script.txt"		    as PrivilegeController
#Include "Libs/Nadeo/TMConsole/Menu/MenuTracking.Script.txt"						    as MenuTracking
#Include "Libs/Nadeo/TMConsole/Logger.Script.txt"									    as Logger
#Include "Libs/Nadeo/TMConsole/Menu/XmlCreator.Script.txt"							    as XmlCreator
#Include "Libs/Nadeo/TMConsole/Menu/LibCheats.Script.txt"							    as LibCheats
#Include "TextLib"																		as TextLib

declare Text G_Enviro;

Integer GetMapNumber(Text _MapPath)
{
	declare Text[]  SplitMapPath     = TextLib::Split("""\""", ""^_MapPath);
	if(!SplitMapPath.existskey(3)) return -1;
	declare Text[]  SplitMapNumber   = TextLib::Split(""".""", ""^SplitMapPath[3]);
	return TextLib::ToInteger(SplitMapNumber[0]);
}

Void PlayTrack(Text _MapPath, Text _Mode, Text _SettingsXml, Text _ModeMulti, Boolean _IsCampaign, Integer _Enviro, Boolean _IsCustomMap, Boolean _BlockNextTrack){
	if(!PrivilegeController::CanIGotoEnviro(_Enviro)) {
		Logger::Warn("PrivilegeController : access to Enviro "^_Enviro^" denied.");
		Pages::ReshowCurrentPage();
		return;
	}
	LoadingScreen::SetLoadingType(0, _Enviro);
	MenuMusicController::SendEventMusic("PlaySoundExit");
	

	

	declare MonoSplitScreen = LibCheats::IsCheatActiveAndMonoScreen();
	
	// Logger::Log("PlayTrack: "^_MapPath^" enviro:"^_Enviro);

	// assert(TitleFlow.IsReady);
	if (!TitleFlow.IsReady) {
		log("WARNING: PlayTrack shouldn't be called, mainloop not ready!");
		wait(TitleFlow.IsReady);
	}
	
	if(MenuTracking::HasMode()) {
		if(_IsCustomMap) {
			MenuTracking::PlayCustomMap(_Enviro);
		} else {
			MenuTracking::PlayCampaignMap(_MapPath);
		}
	}
	
	declare CPresenceMgr::ERichPresence MyRichPresence = CPresenceMgr::ERichPresence::MainMenu;
	
	switch(_Mode) {
		case "TMC_HotSeat" : MyRichPresence = CPresenceMgr::ERichPresence::Party;
		case "TMC_LocalArcade" : MyRichPresence = CPresenceMgr::ERichPresence::Party;
		case "TMC_LocalRounds" : MyRichPresence = CPresenceMgr::ERichPresence::Party;
		case "TMC_OnlineLaps" : MyRichPresence = CPresenceMgr::ERichPresence::Multi;
		case "TMC_OnlineRounds" : MyRichPresence = CPresenceMgr::ERichPresence::Multi;
		case "TMC_OnlineTimeAttack" : MyRichPresence = CPresenceMgr::ERichPresence::Multi;
		case "TMC_CampaignSolo" : MyRichPresence = CPresenceMgr::ERichPresence::Solo;
		case "TMC_CampaignDuo" : MyRichPresence = CPresenceMgr::ERichPresence::Solo;
		case "TMC_Championship" : MyRichPresence = CPresenceMgr::ERichPresence::Multi;
	}
	PresenceMgr.SetPresence(DataMgr.MenuUserId, MyRichPresence);
	
	if(_Mode == "TMC_OnlineRounds" || _Mode == "TMC_CampaignDuo") {
		//ManiaPlanet.IsRemotePlayEnabled = False;
	} else {
		// ne devrait pas etre necessaire, mais bon...
		//ManiaPlanet.IsRemotePlayEnabled = True;
	}
	
	
	if(_ModeMulti == "DualSplitScreen")
	{
		declare Text[] Maps;
		Maps.add(_MapPath);
		
		
		if(MonoSplitScreen)	// hack pour le cheat code UniqueCamera
			TitleFlow.PlayMultiOnSameScreen	(CTitleFlow::ESplitScreenLayout::Vertical, Maps, _Mode, _SettingsXml);
		else
			TitleFlow.PlaySplitScreen		(CTitleFlow::ESplitScreenLayout::Vertical, Maps, _Mode, _SettingsXml);
		Maps.clear();
	}
	else if(_ModeMulti == "FourSplitScreen")
	{
		declare Text[] Maps;
		Maps.add(_MapPath);
		if(MonoSplitScreen)	// hack pour le cheat code UniqueCamera
			TitleFlow.PlayMultiOnSameScreen	(CTitleFlow::ESplitScreenLayout::Four, Maps, _Mode, _SettingsXml);
		else
			TitleFlow.PlaySplitScreen		(CTitleFlow::ESplitScreenLayout::Four, Maps, _Mode, _SettingsXml);
		Maps.clear();
	}
	else
	{
		if(_Mode =="TMC_CampaignSolo") {
			SuperSolo_CampaignController::LoadSuperSoloMedals();
		}
		
		declare Integer MapNumber   = GetMapNumber(_MapPath);
		declare Boolean CanNextTrack for LocalUser;
		if(MapNumber != -1 && !_BlockNextTrack)
		{
			CanNextTrack = Solo_CampaignController::IsNextTrack(MapNumber);
		}
		else
		{
			CanNextTrack = False;
		}
		TitleFlow.PlayMap(_MapPath, _Mode, _SettingsXml);
		// TitleFlow.PlayMap(_MapPath, "TMC_OnlineLaps", _SettingsXml);
		// TitleFlow.PlayMap(_MapPath, "TMC_OnlineRounds", _SettingsXml);
		// TitleFlow.PlayMap(_MapPath, "TMC_OnlineTimeAttack", _SettingsXml);
	}
	
	wait(TitleFlow.IsReady);
	MenuTracking::StopMap();
	PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::MainMenu);
	//ManiaPlanet.IsRemotePlayEnabled = True;
	declare Boolean CanNextTrack for LocalUser;
	CanNextTrack = False;
	

	SceneryManager::ChooseNewScenery();

	if(_Mode =="TMC_CampaignSolo")
	{
		declare Boolean IsInSuperSolo for LocalUser;
		
		//declare Boolean RecordCenterVisible  for LocalUser;
		declare CManiaplanetPluginInterface TrackUIPlugin = Plugins.GetInterface("UIPlugin");
		if(TrackUIPlugin != Null) {
			TrackUIPlugin.CustomEvent("IsRecordCenter", [""]);
		} else {
			Logger::Warn("Null TrackUIPlugin");
		}

		if(IsInSuperSolo) {
			SuperSolo_CampaignController::CheckNewMedal();
		} else {
			Solo_CampaignController::CheckNewMedal();
		}
	}
	else if(_Mode =="TMC_CampaignDuo")
	{
		Duo_CampaignController::CheckNewMedal();
	}

	//Commment√© car avec le RecordCenter le "Show" ne se fait pas avec le ReBuild
	//LayersFactory::Rebuild("MapsOverview");
	//LayersFactory::Rebuild("MainSelector");

	
	Pages::ReshowCurrentPage();
	
	declare Text CurrentPageName = Pages::GetCurrentPageName();
	
	declare CUILayer RankingModuleLayer <=> Layers::Get("RankingModule");
	LayerCustomEvent(RankingModuleLayer, "Show", [""]);
	// log("Send Custom event to Ranking module");
	
	MenuMusicController::MuteMenuSFX();
	MenuMusicController::PlayPageAmbiance(CurrentPageName);
}

Void PlayTrackList(Text[] _MapPaths, Text _Mode, Text _SettingsXml){
	LoadingScreen::SetLoadingType(0, 0);
	MenuMusicController::SendEventMusic("PlaySoundExit");
	
	if (!TitleFlow.IsReady) {
		log("WARNING: PlayTrackList shouldn't be called, mainloop not ready!");
		wait(TitleFlow.IsReady);
	}
	
	//MenuTracking::StartMap(_MapPaths);
	MenuTracking::PlayCustomTracklist(_MapPaths.count);
	
	PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::Multi);
	TitleFlow.PlayMapList(_MapPaths, _Mode, _SettingsXml);
	wait(TitleFlow.IsReady);
	
	PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::MainMenu);

	//MenuTracking::StopMap();
	SceneryManager::ChooseNewScenery();
	Pages::ReshowCurrentPage();
	declare Text CurrentPageName = Pages::GetCurrentPageName();
	
	declare CUILayer RankingModuleLayer <=> Layers::Get("RankingModule");
	LayerCustomEvent(RankingModuleLayer, "Show", [""]);
	// log("Send Custom event to Ranking module");
	
	MenuMusicController::MuteMenuSFX();
	MenuMusicController::PlayPageAmbiance(CurrentPageName);
}

Void PlayTrack(Text _MapPath, Text _Mode, Text _SettingsXml, Text _ModeMulti, Boolean _IsCampaign, Integer _Enviro, Boolean _IsCustomMap){
	PlayTrack(_MapPath, _Mode, _SettingsXml, _ModeMulti, _IsCampaign, _Enviro, _IsCustomMap, True);
}

/*
Void PlayTrack(Text _MapPath, Text _Mode, Text _SettingsXml, Text _ModeMulti){
	PlayTrack(_MapPath, _Mode, _SettingsXml, _ModeMulti, True, 0);
}
*/


Void ExitEditor(Text _EditorPluginScript)
{
	declare Text CustomResultType = TitleFlow.CustomResultType;

	//HACK - Version pour la GamesCon/Serge
	if (CustomResultType == "EditorRandomGenerationFinished") {
		declare MapCodeDamien = TitleFlow.CustomResultData[0];
		
		LoadingScreen::SetLoadingType(0);
		
		wait(DataMgr.Ready);
		DataMgr.RetrieveMapFileNameFromEditionId(DataMgr.MenuUserId, MapCodeDamien);
		wait(DataMgr.Ready);
		declare MapPath = DataMgr.MapFileNameFromEditionId;
		
		declare Text Mode = ModeController::GetModeName();
		wait(TitleFlow.IsReady);
		
		declare Text SettingsXml = XmlCreator::GetXml_OnlyCheatSettings(False);
		
		declare Boolean MonoSplitScreen = False;
		declare Text ActivatedCheatMode = "";
		
		if(Mode == "TMC_LocalRounds")
		{
			declare Text ModeMultiScreen = ModeController::GetModeMultiScreen();
			declare CTitleFlow::ESplitScreenLayout SplitScreenLayout;
			if(ModeMultiScreen == "DualSplitScreen")
			{
				SplitScreenLayout = CTitleFlow::ESplitScreenLayout::Vertical;
			}
			else
			{
				SplitScreenLayout = CTitleFlow::ESplitScreenLayout::Four;
			}
			//log("ModeMultiScreen["^ModeMultiScreen^"]: "^ SplitScreenLayout);

			declare Text[] Maps;
			Maps.add(MapPath);
			PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::Party);
			
			MonoSplitScreen 	= LibCheats::IsCheatActiveAndMonoScreen();
			
			if(MonoSplitScreen)
				TitleFlow.PlayMultiOnSameScreen	(SplitScreenLayout, Maps, Mode, SettingsXml);
			else
				TitleFlow.PlaySplitScreen		(SplitScreenLayout, Maps, Mode, SettingsXml);
		}
		else
		{
			PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::Party);
			TitleFlow.PlayMap(MapPath, Mode, SettingsXml);
		}
		
		ActivatedCheatMode = LibCheats::GetActivatedCheatMode(); 
		
		MenuTracking::StopModeContext();
		MenuTracking::StartModeContext(Mode, ActivatedCheatMode);
		
		MenuTracking::PlayRandomMap(G_Enviro);
		wait(TitleFlow.IsReady);
		MenuTracking::StopMap();
		PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::MainMenu);

		declare CUILayer StartDemoLayer <=> Layers::Get("StartDemo");
		LayerCustomEvent(StartDemoLayer, "Show", [""]);
	}
}

Void EditNewMap(Text _Environment, Text _Mood, Text _ModUrl, Text _PlayerModel, Text _MapType, Text _EditorPluginScript, Text _Args, Boolean _IsRandom){
	G_Enviro 	= _Environment;
	wait(TitleFlow.IsReady);
	
	MenuMusicController::SendEventMusic("PlaySoundExit");

	if(_IsRandom) {
		MenuTracking::StartTrackbuilderContext(_Environment, "3");
	}
	// else : d√©j√† sett√© ailleurs (d√©sol√©...)
	
	//Logger::Log("[EditNewMap] _Environment: "^_Environment);
	//Logger::Log("[EditNewMap] _Args: "^_Args);
	
	LoadingScreen::SetLoadingType(1, 2);
	PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::Create);
	TitleFlow.EditNewMap(_Environment, _Mood, _ModUrl, _PlayerModel, _MapType, _EditorPluginScript, _Args);

	wait(TitleFlow.IsReady);
	ExitEditor(_EditorPluginScript);
	PresenceMgr.SetPresence(DataMgr.MenuUserId, CPresenceMgr::ERichPresence::MainMenu);
	
	declare Text CurrentPageName = Pages::GetCurrentPageName();
	
	MenuMusicController::MuteMenuSFX();
	MenuMusicController::PlayPageAmbiance(CurrentPageName);
}