#Include "TextLib" as TextLib
#Include "Libs/Nadeo/TMConsole/Menu/MenuLayers.Script.txt"					as Layers

#Const C_REQUESTSTATUS_NOREQUEST				0
#Const C_REQUESTSTATUS_GETLOGINS				1
#Const C_REQUESTSTATUS_GETDISPLAYNAMES			2

declare Integer 	 			G_RequestBuddiesStatus;
declare Text[Text][] 			G_BuddiesData;
declare CWebServicesTaskResult 	G_GetDisplayNamesTask;	
declare Text[]					G_LayersToSend;

Boolean GetBuddies() { //renvoie True si les buddies on été renvoyés cash
	G_RequestBuddiesStatus = C_REQUESTSTATUS_GETLOGINS;
	G_BuddiesData.clear();
	return False; //pour l'instant on retrieve les buddies à chaque GetBuddies 
}

Text[Text] GetBuddiesResult() { //renvoie l'association login / displayname (Login[DisplayName])
	if (G_RequestBuddiesStatus != C_REQUESTSTATUS_NOREQUEST)
		return Text[Text];
	declare Text[Text] Result;
	for (I, 0, G_BuddiesData.count - 1)
		Result[G_BuddiesData[I]["displayname"]] = G_BuddiesData[I]["login"];
	return Result;
}

Void Layer_GetMenuUserDisplayName(Text _LayerName) {
	declare CUILayer LayerToSend = Layers::Get(_LayerName);
	if (LayerToSend == Null)
		return;
	
	if( ManiaPlanet.MasterServer_MainMSUser == Null) return;
	LayerCustomEvent(LayerToSend, "MenuUserDisplayName", [ManiaPlanet.MasterServer_MainMSUser.DisplayName]);
}

Void Layer_GetBuddies(Text _LayerName) {
	G_LayersToSend.add(_LayerName);
	if (G_RequestBuddiesStatus == C_REQUESTSTATUS_NOREQUEST)
	{	
		GetBuddies();
	}
}

Void Load() {
	G_LayersToSend.clear();
	G_RequestBuddiesStatus = C_REQUESTSTATUS_NOREQUEST;
	G_BuddiesData.clear();
	GetBuddies();
}

Boolean IsReady()
{
	return G_RequestBuddiesStatus == C_REQUESTSTATUS_NOREQUEST;
}

Void Loop() {
	switch (G_RequestBuddiesStatus)
	{
		case C_REQUESTSTATUS_GETLOGINS :
		{
			if( ManiaPlanet.MasterServer_MainMSUser == Null) return;
			
			if (UserMgr.AreBuddiesLoginsReady(ManiaPlanet.MasterServer_MainMSUser.Id))
			{
				declare Text[] BuddiesLogins = TextLib::Split(",",UserMgr.GetBuddiesLogins(ManiaPlanet.MasterServer_MainMSUser.Id));
				
				G_GetDisplayNamesTask = ManiaPlanet.MasterServer_GetDisplayName(ManiaPlanet.MasterServer_MainMSUser.Id);
				declare GetDisplayNameTaskResult <=> (G_GetDisplayNamesTask as CWebServicesTaskResult_GetDisplayNameScriptResult);
				
				for (I, 0, BuddiesLogins.count - 1)
				{
					if (BuddiesLogins[I] != "")
					{
						declare Text BuddyLogin = BuddiesLogins[I];
						G_BuddiesData.add(Text[Text]);
						G_BuddiesData[G_BuddiesData.count-1]["login"] = BuddyLogin;
						GetDisplayNameTaskResult.AddLogin(BuddyLogin);
					}
				}
				
				GetDisplayNameTaskResult.StartTask();
				G_RequestBuddiesStatus = C_REQUESTSTATUS_GETDISPLAYNAMES;
			}
		}
		case C_REQUESTSTATUS_GETDISPLAYNAMES :
		{
			if (!G_GetDisplayNamesTask.IsProcessing)
			{
				declare GetDisplayNameTaskResult <=> (G_GetDisplayNamesTask as CWebServicesTaskResult_GetDisplayNameScriptResult);
				if (GetDisplayNameTaskResult.HasSucceeded)
				{
					for (I, 0, G_BuddiesData.count - 1)
						G_BuddiesData[I]["displayname"] = GetDisplayNameTaskResult.GetDisplayName(G_BuddiesData[I]["login"]);
				} else {
					for (I, 0, G_BuddiesData.count - 1)
						G_BuddiesData[I]["displayname"] = "";
				}
				G_RequestBuddiesStatus = C_REQUESTSTATUS_NOREQUEST;
				G_GetDisplayNamesTask = Null;
				
				for (I, 0, G_LayersToSend.count - 1)
				{
					declare CUILayer LayerToSend = Layers::Get(G_LayersToSend[I]);
					if (LayerToSend == Null)
						continue;
					declare Text[Text][] RequestedBuddies for LayerToSend.LocalPage;
					RequestedBuddies = G_BuddiesData;
					LayerCustomEvent(LayerToSend, "BuddiesSent", Text[]);
				}
				G_LayersToSend.clear();
			}
		}
	}
}