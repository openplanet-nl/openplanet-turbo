/**
 * Ce script contient la donnée des textes à intégrer aux modes de jeu.
 **/
#Const ScriptName			"FlavourText.Script.txt"


Text Private_HmdCam() {

	declare Text ML =
	"""
	<frame id="Frame" posn="0. 0. 0." hidden="0" scale="2">
		<quad id="Quad_FeedbackCam" posn="0. 0. 0." sizen="5 5" halign="center" valign="center" bgcolor="000" hidden="1"/>
	</frame>
	
	<script><!--
	
	main() 
	{
		declare Quad_FeedbackCam <=> (Page.MainFrame.GetFirstChild("Quad_FeedbackCam")			as CMlQuad);
		declare CInputScriptPad::EButton[] KonamiCode;
		KonamiCode.add(CInputScriptPad::EButton::L1);
		KonamiCode.add(CInputScriptPad::EButton::L1);
		KonamiCode.add(CInputScriptPad::EButton::Up);
		KonamiCode.add(CInputScriptPad::EButton::Down);
		
		declare Integer IndexCode = 0;
		declare Integer TimerKonami = 0;
		declare Integer TimerFeedbackShown = 0;
		
		while(True) 
		{
			yield;
			foreach(PadIndex => Pad in Input.Pads) 
			{
				if(Input.Pads.existskey(Pad))
				{
					foreach(Button in Input.Pads[PadIndex].ButtonEvents)
					{	
						if(TimerKonami == 0) {
							TimerKonami = 2000;
						}
						
						if(KonamiCode[IndexCode] == Button) {
							IndexCode += 1;
						} else {
							IndexCode = 0;
						}
					}
				}
			}
			
			if(TimerKonami >= 0) {
				TimerKonami -= Period;
				if(IndexCode == KonamiCode.count) {
					LocalUser.HackCamHmdDisabled = !LocalUser.HackCamHmdDisabled;
					IndexCode = 0;
					TimerKonami = 0;
					TimerFeedbackShown = 500;
				}
			} else {
				TimerKonami = 0;
				IndexCode = 0;
			}
			
			if(TimerFeedbackShown > 0) {
				Quad_FeedbackCam.Visible = True;
				TimerFeedbackShown -= Period;
			} else {
				Quad_FeedbackCam.Visible = False;
			}
		}
	}
	--></script>
	""";
	
	return ML;
}