#Include "Libs/Openplanet/TMConsole/Menu/MenuLayers.Script.txt"			as Layers

#Const C_REQUESTTYPE_ZONEINFOSSENT	0
#Const C_REQUESTTYPE_EXITZONE		1


declare Text				G_LayerToSend;
declare Integer				G_RequestType;
declare Text[]				G_ParamToSend;




Text GetFeedbackText(Boolean _Succeed) {
	if(G_RequestType == C_REQUESTTYPE_ZONEINFOSSENT) {
		return "ZoneInfosSent";
	}
	else if(G_RequestType == C_REQUESTTYPE_EXITZONE) {
		return "ExitZone";
	}
	return "";
}

Void SendFeedbackToUI(Boolean _Succeed) {
	declare CUILayer LayerToSend = Layers::Get(G_LayerToSend);
	if(LayerToSend == Null) return;
	declare Text FeedbackText = GetFeedbackText(_Succeed);
	LayerCustomEvent(LayerToSend, FeedbackText, G_ParamToSend);
}

Void Private_SetLoadFilter(Text _PathFilter)
{
	DataMgr.MapFilterStartWithPath = _PathFilter;
	wait(DataMgr.Ready);
}


// Functions to call in the Handlers
//-----------------------------------------------------------//

Void SendInfoZone(Text _Layer, Text[] _Zones, Text[Text] _ZonesSorted, Text _Parent){
	declare CUILayer 		LayerToSend 	= Layers::Get(_Layer);
	if(LayerToSend == Null) return;
	
	declare Text[]			Net_Zones		for LayerToSend.LocalPage;
	declare Text[Text]		Net_ZonesSorted	for LayerToSend.LocalPage;
	declare Text			Net_ZoneParent	for LayerToSend.LocalPage;
	Net_Zones  			= _Zones;
	Net_ZonesSorted  	= _ZonesSorted;
	Net_ZoneParent = _Parent;

	G_LayerToSend = _Layer;
	G_ParamToSend.clear();
	G_ParamToSend = [""];
	G_RequestType = C_REQUESTTYPE_ZONEINFOSSENT;
	SendFeedbackToUI(True);
}

Void ExitZone(Text _Layer)
{
	declare CUILayer 		LayerToSend 	= Layers::Get(_Layer);
	if(LayerToSend == Null) return;
	
	G_LayerToSend = _Layer;
	G_ParamToSend.clear();
	G_ParamToSend = [""];
	G_RequestType = C_REQUESTTYPE_EXITZONE;
	SendFeedbackToUI(True);
}