#Include "TextLib"			as TextLib
#Include "Libs/Openplanet/TMConsole/PopUpManager.Script.txt"									as PopUpManager
#Include "Libs/Openplanet/TMConsole/Menu/Pages.Script.txt"									as Pages
#Include "Libs/Openplanet/UIPadButtons.Script.txt"											as UIButtons

declare Text 	G_PadConnected;	
declare Boolean G_IsPadConnected;

Void LoadPadButton() {
	UIButtons::Load();
}

Void Loop() {
	declare Text CurrentPageName = Pages::GetCurrentPageName();
	if(G_PadConnected != UserMgr.MainUserPad^"" && CurrentPageName != "Intro" && CurrentPageName != "StartDemo" && (SystemPlatform == CManiaApp::ESystemPlatform::PS4 || SystemPlatform == CManiaApp::ESystemPlatform::XBoxOne))
	{
		G_PadConnected = UserMgr.MainUserPad^"";
		if(G_PadConnected == "(CInputPad*)Null")
		{
			declare MSUser <=> ManiaPlanet.MasterServer_GetMSUserFromId(DataMgr.MenuUserId);
			if(MSUser == Null) return;
			declare Text PleaseConnectPadText = TextLib::Compose(_("Please reconnect your %1"), UIButtons::GetPadName());
			//RecordCenterController::RecordCenterHide();
			declare CManiaplanetPluginInterface G_UIPlugin = Plugins.GetInterface("UIPlugin");
			G_UIPlugin.CustomEvent("HideRecordCenter", [""]);
			PopUpManager::AddPopUp(10 , 42, PleaseConnectPadText, "Ok", False);
		}
		else
		{
			PopUpManager::HidePopUp();
		}
	}
}

Boolean IsPadConnected() {
	return G_IsPadConnected;
}

Void InGameLoop(Text _PopupInGameLayerName) {
	declare Text CurrentPageName = Pages::GetCurrentPageName();
	if (UserMgr.MainUserLogged && G_PadConnected != UserMgr.MainUserPad^"" && CurrentPageName != "Intro" && CurrentPageName != "StartDemo")
	{
		G_PadConnected = UserMgr.MainUserPad^"";
		if(G_PadConnected == "(CInputPad*)Null")
		{
			G_IsPadConnected = False;
			declare Text PleaseConnectPadText = TextLib::Compose(_("Please reconnect your %1"), UIButtons::GetPadName());
			//RecordCenterController::RecordCenterHide();
			PopUpManager::AddPopUpInGame(_PopupInGameLayerName, 10 , 42, PleaseConnectPadText, "Ok", False);
		}
		else
		{
			G_IsPadConnected = True;
			PopUpManager::HidePopUpInGame(_PopupInGameLayerName);
		}
	}
}

Void HidePopupInGame(Text _PopupInGameLayerName) {
	PopUpManager::HidePopUpInGame(_PopupInGameLayerName);
}